import os
import cv2
import numpy as np

def create_folders(base_path):
    os.makedirs(os.path.join(base_path, 'crack'), exist_ok=True)
    os.makedirs(os.path.join(base_path, 'no_crack'), exist_ok=True)

def detect_crack(image_path):
    image = cv2.imread(image_path)
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)
    edges = cv2.Canny(blurred, 50, 150)

    # Find contours
    contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    for contour in contours:
        if cv2.contourArea(contour) > 100:  # Adjust area threshold as needed
            return True
    return False

def process_images(input_folder, output_folder):
    create_folders(output_folder)
    for filename in os.listdir(input_folder):
        if filename.endswith(('.png', '.jpg', '.jpeg')):
            image_path = os.path.join(input_folder, filename)
            if detect_crack(image_path):
                cv2.imwrite(os.path.join(output_folder, 'crack', filename), cv2.imread(image_path))
            else:
                cv2.imwrite(os.path.join(output_folder, 'no_crack', filename), cv2.imread(image_path))

input_folder = 'path/to/your/images'
output_folder = 'path/to/save/results'
process_images(input_folder, output_folder)
